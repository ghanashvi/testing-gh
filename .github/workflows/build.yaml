# File: .github/workflows/ci-orchestration.yml

name: CI Orchestration Pipeline

on:
  repository_dispatch:
    types: [app-code-change]

jobs:
  detect-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout CI Orchestration Repository
        uses: actions/checkout@v3
      
      - name: Clone Application Repository
        run: |
          REPO="${{ github.event.client_payload.repository }}"
          git clone https://x-access-token:${{ secrets.GH_PAT }}@github.com/$REPO.git app-repo
          cd app-repo
          git checkout ${{ github.event.client_payload.sha }}
      
      - name: Detect Changed Services
        id: detect-services
        run: |
          cd app-repo
          git fetch --prune --unshallow
          PREV_COMMIT=$(git rev-parse HEAD^)
          CHANGED_FILES=$(git diff --name-only $PREV_COMMIT HEAD)
          
          AFFECTED_SERVICES=""
          for FILE in $CHANGED_FILES; do
            if [[ $FILE == services/* ]]; then
              SERVICE=$(echo $FILE | cut -d/ -f2)
              AFFECTED_SERVICES="$AFFECTED_SERVICES $SERVICE"
            elif [[ $FILE == */Dockerfile ]]; then
              SERVICE=$(dirname $FILE | xargs basename)
              AFFECTED_SERVICES="$AFFECTED_SERVICES $SERVICE"
            elif [[ $FILE == */docker-compose* ]]; then
              SERVICE=$(dirname $FILE | xargs basename)
              AFFECTED_SERVICES="$AFFECTED_SERVICES $SERVICE"
            fi
          done
          
          AFFECTED_SERVICES=$(echo $AFFECTED_SERVICES | tr ' ' '\n' | sort | uniq | tr '\n' ' ')
          echo "AFFECTED_SERVICES=$AFFECTED_SERVICES" >> $GITHUB_ENV
          echo "services=$AFFECTED_SERVICES" >> $GITHUB_OUTPUT
      
      - name: Build Decision
        run: |
          if [[ -z "${{ env.AFFECTED_SERVICES }}" ]]; then
            echo "SHOULD_BUILD=false" >> $GITHUB_ENV
          else
            echo "SHOULD_BUILD=true" >> $GITHUB_ENV
          fi