name: Build and Push to Quarantine

on:
  repository_dispatch:
    types: [start-build-process]

jobs:
  build-and-quarantine:
    runs-on: ubuntu-latest
    outputs:
      changed_services: ${{ steps.detect-changes.outputs.changed_services }}
    steps:
      - name: Checkout CI Orchestration Repo
        uses: actions/checkout@v3

      - name: Clone Source Repository
        run: |
          REPO_NAME=$(echo ${{ github.event.client_payload.repository }} | cut -d'/' -f2)
          git clone https://x-access-token:${{ secrets.CI_PAT }}@github.com/${{ github.event.client_payload.repository }}.git $REPO_NAME
          cd $REPO_NAME
          git checkout ${{ github.event.client_payload.commit }}

      - name: Detect Changed Components
        id: detect-changes
        run: |
          cd $REPO_NAME
          # Check if this is the first commit
          if git rev-parse HEAD~1 &>/dev/null; then
            # Normal flow - previous commit exists
            PREVIOUS_COMMIT=$(git rev-parse HEAD~1)
            
            # Find which directories with Dockerfiles have changed
            DOCKERFILE_CHANGES=$(git diff --name-only $PREVIOUS_COMMIT HEAD | grep -o '^[^/]*/[^/]*' | sort | uniq | xargs -I{} bash -c 'if [ -f \"{}/Dockerfile" ]; then echo {}; fi')
            
            # Find which directories with service files have changed
            SERVICE_FILE_CHANGES=$(git diff --name-only $PREVIOUS_COMMIT HEAD | grep -E '\.(yaml|yml|json)$' | grep -i 'service|deployment|config' | grep -o '^[^/]*/[^/]*' | sort | uniq)
          else
            # First-time run - consider all Dockerfiles
            echo "First-time run detected - processing all components"
            DOCKERFILE_CHANGES=$(find . -name \Dockerfile" | grep -o '^\./[^/]*/[^/]*' | sed 's/^\.//' | sort | uniq)
            SERVICE_FILE_CHANGES=$(find . -name "*.yaml" -o -name \*.yml" -o -name "*.json" | grep -i 'service\|deployment\|config' | grep -o '^\./[^/]*/[^/]*' | sed 's/^\.//' | sort | uniq)
          fi
          
          # Combine the changes
          ALL_CHANGES=$(echo "$DOCKERFILE_CHANGES $SERVICE_FILE_CHANGES" | tr ' ' '\
' | sort | uniq)
          
          # Output the changed services
          echo "Changed services and configs: $ALL_CHANGES"
          echo "changed_services=$ALL_CHANGES" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Images
        run: |
          REPO_NAME=$(echo ${{ github.event.client_payload.repository }} | cut -d'/' -f2)
          cd $REPO_NAME
          
          # Loop through each identified service and build its Docker image
          for SERVICE in ${{ steps.detect-changes.outputs.changed_services }}; do
            if [ -f "$SERVICE/Dockerfile" ]; then
              echo \Building $SERVICE..."
              
              SERVICE_NAME=$(echo $SERVICE | cut -d'/' -f2)
              COMMIT_TAG=\${{ github.event.client_payload.commit }}"
              FEATURE_TAG=$(echo ${{ github.event.client_payload.ref }} | sed 's/refs\\/heads\///')
              
              # Build image with tags
              docker build -t gcr.io/quarantine-project/$REPO_NAME/$SERVICE_NAME:$COMMIT_TAG \
                          -t gcr.io/quarantine-project/$REPO_NAME/$SERVICE_NAME:$FEATURE_TAG \
                          $SERVICE
              
              echo "Successfully built $SERVICE_NAME with commit and feature tags"
            fi
          done

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Push Images to Quarantine
        run: |
          REPO_NAME=$(echo ${{ github.event.client_payload.repository }} | cut -d'/' -f2)
          
          # Loop through each identified service and push its Docker image
          for SERVICE in ${{ steps.detect-changes.outputs.changed_services }}; do
            if [ -f "$SERVICE/Dockerfile" ]; then
              SERVICE_NAME=$(echo $SERVICE | cut -d'/' -f2)
              COMMIT_TAG="${{ github.event.client_payload.commit }}"
              FEATURE_TAG=$(echo ${{ github.event.client_payload.ref }} | sed 's/refs\/heads\///')
              
              # Push images to Google Artifact Registry in Quarantine Project
              docker push gcr.io/quarantine-project/$REPO_NAME/$SERVICE_NAME:$COMMIT_TAG
              docker push gcr.io/quarantine-project/$REPO_NAME/$SERVICE_NAME:$FEATURE_TAG
              
              echo "Successfully pushed $SERVICE_NAME to Quarantine Project"
            fi
          done

      - name: Trigger Security Scanning
        if: success()
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.CI_PAT }}
          repository: ${{ github.repository }}
          event-type: start-security-scanning
          client-payload: '{
            "repository": "${{ github.event.client_payload.repository }}",
            "commit": "${{ github.event.client_payload.commit }}\
            "ref": "${{ github.event.client_payload.ref }}",
            "changed_services": "${{ steps.detect-changes.outputs.changed_services }}"
          }'
