###############################################################################
# Workflow: Build ➜ Container‑Analysis Scan ➜ Promote (per image)
###############################################################################
name: Build ➜ Scan ➜ Promote

on:
  repository_dispatch:
    types: [app-code-change]

###############################################################################
# Global environment
###############################################################################
env:
  WORKLOAD_IDENTITY_PROVIDER: projects/906017862008/locations/global/workloadIdentityPools/github-pool/providers/github-provider
  SERVICE_ACCOUNT:            ci-image-builder@axial-edition-463510-p5.iam.gserviceaccount.com

  QUAR_IMAGE_REGISTRY:   us-central1-docker.pkg.dev/axial-edition-463510-p5/quarantine-repo
  SECURE_IMAGE_REGISTRY: us-central1-docker.pkg.dev/decent-creek-464109-p6/secure-repo
  GAR_LOCATION:          us-central1

  PROJECT_ID: axial-edition-463510-p5
  LOCATION:   us-central1           # Container‑Analysis API region

###############################################################################
# Job 1 : Build each changed Dockerfile  (your original logic)
###############################################################################
jobs:
  build:
    runs-on: ubuntu-latest
    permissions: { contents: read, id-token: write }

    outputs:
      images_json: ${{ steps.collect.outputs.images_json }}
      commit_sha:  ${{ github.event.client_payload.sha }}

    steps:
      # ---------- unchanged clone / base / diff / build block -------------
      - uses: actions/checkout@v3

      - id: clone_repo
        run: |
          REPO_FULL="${{ github.event.client_payload.repository }}"
          REPO_NAME="${REPO_FULL#*/}"
          git clone https://x-access-token:${{ secrets.CI_PAT }}@github.com/$REPO_FULL "$REPO_NAME"
          cd "$REPO_NAME"
          git checkout "${{ github.event.client_payload.sha }}"
          echo "REPO_NAME=$REPO_NAME" >>"$GITHUB_OUTPUT"

      - id: base
        run: |
          cd "${{ steps.clone_repo.outputs.REPO_NAME }}"
          git rev-parse HEAD~1 >/dev/null 2>&1 && \
            echo "sha=$(git rev-parse HEAD~1)" >>"$GITHUB_OUTPUT" || \
            echo "sha=4b825dc642cb6eb9a060e54bf8d69288fbee4904" >>"$GITHUB_OUTPUT"

      - id: diff
        uses: tj-actions/changed-files@v46
        with:
          token: ${{ github.token }}
          path: ${{ steps.clone_repo.outputs.REPO_NAME }}
          base_sha: ${{ steps.base.outputs.sha }}
          sha:      ${{ github.event.client_payload.sha }}
          use_rest_api: false
          files: |
            **/Dockerfile*

      - uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account:            ${{ env.SERVICE_ACCOUNT }}
      - uses: docker/setup-buildx-action@v2
      - uses: google-github-actions/setup-gcloud@v1
      - run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build & push images
        run: |
          set -e
          REPO="${{ steps.clone_repo.outputs.REPO_NAME }}"
          SHA="${{ github.event.client_payload.sha }}"
          cd "$REPO"
          : > /tmp/images.txt
          for FILE in ${{ steps.diff.outputs.all_changed_files }}; do
            [[ "$FILE" != *Dockerfile* ]] && continue
            DIR=$(dirname "$FILE")
            COMP=$(basename "$FILE" | sed -E 's/^Dockerfile[-\.]?//')
            COMP=${COMP:-default}
            IMAGE="$QUAR_IMAGE_REGISTRY/$REPO-$COMP:insecure-$SHA"
            docker build -f "$FILE" -t "$IMAGE" "$DIR"
            docker push "$IMAGE"
            echo "$IMAGE" >> /tmp/images.txt
          done

      - id: collect
        run: |
          if [ -s /tmp/images.txt ]; then
            jq -Rsc 'split("\n")[:-1]' /tmp/images.txt > images.json
            echo "images_json=$(cat images.json)" >>"$GITHUB_OUTPUT"
          else
            echo "images_json=[]" >>"$GITHUB_OUTPUT"
          fi

###############################################################################
# Job 2 : Scan and (conditionally) promote — one runner per image
###############################################################################
  per_image:
    needs: build
    if: needs.build.outputs.images_json != '[]'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false                  # let clean images finish
      matrix:
        image: ${{ fromJson(needs.build.outputs.images_json) }}

    permissions:
      id-token: write
      packages: write

    env:
      SHA: ${{ needs.build.outputs.commit_sha }}

    steps:
      - uses: actions/checkout@v3

      - uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account:            ${{ env.SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v1
      - uses: docker/setup-buildx-action@v2

      - run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      # ------------ Scan --------------------------------------------------
      - id: scan
        name: Scan image
        continue-on-error: true         # do not fail job yet
        env: { IMAGE: ${{ matrix.image }} }
        run: |
          TOKEN=$(gcloud auth print-access-token)
          DIGEST=$(gcloud artifacts docker images describe "$IMAGE" --format='value(image_summary.digest)')
          RESOURCE_URL="https://${IMAGE%%:*}@${DIGEST}"
          API="https://containeranalysis.googleapis.com/v1/projects/${PROJECT_ID}/locations/${LOCATION}/occurrences:vulnerabilitySummary"
          SUMMARY=$(curl -s -H "Authorization: Bearer $TOKEN" \
             "${API}?filter=resourceUrl=\"${RESOURCE_URL}\"&returnPartialSuccess=true")
          TOTAL=$(echo "$SUMMARY" | jq '[(.counts // [])[] .totalCount | tonumber] | add')
          if [ "$TOTAL" -gt 0 ]; then
            echo "❌ vulnerabilities detected in $IMAGE"
            echo "$SUMMARY" | jq '.counts'
            echo "clean=false" >>"$GITHUB_OUTPUT"
            exit 0        # job continues (no promotion)
          else
            echo "✅ no vulnerabilities in $IMAGE"
            echo "clean=true"  >>"$GITHUB_OUTPUT"
          fi

      # ------------ Promote (only if clean) ------------------------------
      - if: steps.scan.outputs.clean == 'true'
        name: Docker login (secure)
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - id: promote
        if: steps.scan.outputs.clean == 'true'
        env: { SRC: ${{ matrix.image }} }
        run: |
          DST=$(echo "$SRC" | sed "s|$QUAR_IMAGE_REGISTRY|$SECURE_IMAGE_REGISTRY|" \
                             | sed "s/:insecure-/:secure-/")
          docker pull "$SRC"
          docker tag "$SRC" "$DST"
          docker push "$DST"
          echo "dst=$DST" >>"$GITHUB_OUTPUT"

      - name: Push to GHCR
        if: steps.scan.outputs.clean == 'true'
        env:
          DST: ${{ steps.promote.outputs.dst }}
          SHA: ${{ env.SHA }}
        run: |
          NAME=$(basename "$DST" | cut -d':' -f1)
          GHCR="ghcr.io/${{ github.repository_owner }}/$NAME:secure-$SHA"
          echo "${{ github.token }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker tag "$DST" "$GHCR"
          docker push "$GHCR"

      # ------------ Mark run success/failure -----------------------------
      - name: Mark failure if vulnerable
        if: steps.scan.outputs.clean != 'true'
        run: |
          echo "Image skipped due to vulnerabilities" && exit 0
